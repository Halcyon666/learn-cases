plugins {
    id 'java'
    id 'org.springframework.boot' version '3.2.4'
    id 'io.spring.dependency-management' version '1.1.4'
}

dependencies {
    compileOnly 'org.projectlombok:lombok'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter'
    implementation 'org.springframework:spring-aspects:6.1.5'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation 'org.yaml:snakeyaml:2.2'
    implementation 'org.greenrobot:eventbus-java:3.3.1'
    implementation 'org.apache.httpcomponents:httpclient:4.5.14' exclude group: 'commons-logging'
    // https://mvnrepository.com/artifact/io.netty/netty-all
    implementation 'io.netty:netty-all:4.1.109.Final'
    // https://mvnrepository.com/artifact/com.google.protobuf/protobuf-java
    implementation 'com.google.protobuf:protobuf-java:4.26.1'
    // https://mvnrepository.com/artifact/com.alibaba.fastjson2/fastjson2
    implementation 'com.alibaba.fastjson2:fastjson2:2.0.49'


    implementation project(":spring-spi")

    annotationProcessor 'org.projectlombok:lombok'
    annotationProcessor project(':annotation-processor')
    annotationProcessor 'org.greenrobot:eventbus-annotation-processor:3.3.1'

    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.junit.vintage:junit-vintage-engine:5.10.1'

}

group = rootProject.group
version = rootProject.version
description = 'learncases'

java.sourceCompatibility = JavaVersion.VERSION_17
java.targetCompatibility = JavaVersion.VERSION_17

tasks.withType(JavaCompile).configureEach {
    options.encoding = 'UTF-8'
    options.compilerArgs += ["-AeventBusIndex=com.whalefall.use.apt.EventBusIndex"]
}

tasks.named('test') {
    useJUnitPlatform()
}
