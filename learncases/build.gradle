plugins {
    id 'java'
    id 'org.springframework.boot' version '3.4.1'
    id 'io.spring.dependency-management' version '1.1.6'
    //  Applying the JaCoCo plugin
    id 'jacoco'
}

test {
    // Add Mockito as a Java agent to avoid dynamic loading warnings
    doFirst {
        def byteBuddyAgent = configurations.testRuntimeClasspath
                .resolvedConfiguration
                .resolvedArtifacts
                .find { it.name == 'byte-buddy-agent' }
        if (byteBuddyAgent != null) {
            jvmArgs "-javaagent:${byteBuddyAgent.file}"
        }
    }

    // report is always generated after tests run
    finalizedBy jacocoTestReport
}

jacocoTestReport {
    // tests are required to run before generating the report
    dependsOn test
    reports {
        xml.required = true
        html.required = true
    }
}

jacoco {
    toolVersion = "0.8.11"
    // config layout directory
    reportsDirectory = layout.buildDirectory.dir("jacoco/")
}

configurations.configureEach {
    exclude group: 'commons-logging', module: 'commons-logging'
}

dependencies {
    compileOnly 'org.projectlombok:lombok'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter'
    implementation 'org.springframework:spring-aspects:6.2.5'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation 'org.yaml:snakeyaml:2.3'
    implementation 'org.greenrobot:eventbus-java:3.3.1'
    implementation 'org.apache.httpcomponents:httpclient:4.5.14'
    // https://mvnrepository.com/artifact/io.netty/netty-all
    implementation 'io.netty:netty-all:4.1.116.Final'
    // https://mvnrepository.com/artifact/com.google.protobuf/protobuf-java
    implementation 'com.google.protobuf:protobuf-java:4.29.2'
    // https://mvnrepository.com/artifact/com.alibaba.fastjson2/fastjson2
    implementation 'com.alibaba.fastjson2:fastjson2:2.0.53'
    implementation 'com.google.code.findbugs:jsr305:3.0.2'
    // https://mvnrepository.com/artifact/org.drools/drools-core
    implementation 'org.kie:kie-api:10.1.0'
    implementation 'org.drools:drools-core:10.1.0'
    implementation 'org.drools:drools-compiler:10.1.0'
    implementation 'org.drools:drools-xml-support:10.0.0'
    implementation 'org.drools:drools-mvel:10.1.0'
    // https://mvnrepository.com/artifact/commons-io/commons-io
    implementation 'commons-io:commons-io:2.18.0'
    // https://mvnrepository.com/artifact/org.apache.commons/commons-vfs2
    implementation 'org.apache.commons:commons-vfs2:2.9.0'
    // https://mvnrepository.com/artifact/commons-net/commons-net
    implementation 'commons-net:commons-net:3.11.1'
    implementation 'org.springframework.boot:spring-boot-starter-websocket'
    // 只是在 Spring 环境下提供了一些额外的集成支持
    // implementation 'org.kie:kie-spring:7.9.0.Final'

    implementation project(":spring-spi")
    annotationProcessor 'org.projectlombok:lombok'
    annotationProcessor project(':annotation-processor')
    annotationProcessor 'org.greenrobot:eventbus-annotation-processor:3.3.1'

    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.junit.jupiter:junit-jupiter:6.0.0'
    testCompileOnly 'org.projectlombok:lombok'
    testAnnotationProcessor 'org.projectlombok:lombok'

    implementation 'org.mapstruct:mapstruct:1.6.3'
    annotationProcessor 'org.mapstruct:mapstruct-processor:1.6.3'
    // https://mvnrepository.com/artifact/org.mockito/mockito-inline
    testImplementation 'org.mockito:mockito-inline:5.2.0'
}

group = rootProject.group
version = rootProject.version
description = 'learncases'

java.sourceCompatibility = JavaVersion.VERSION_17
java.targetCompatibility = JavaVersion.VERSION_17

tasks.withType(JavaCompile).configureEach {
    options.encoding = 'UTF-8'
    options.compilerArgs += ["-AeventBusIndex=com.whalefall.use.apt.EventBusIndex"]
}

tasks.named('test') {
    useJUnitPlatform()
}
